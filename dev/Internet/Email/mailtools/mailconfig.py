"""
пользовательские параметры настройки для различных программ электронной
почты (версия pymail/pop_mailtools); сценарии электронной почты получают
имена серверов и другие параметры настройки из этого модуля: измените его,
чтобы он отражал имена ваших серверов и ваши предпочтения;
"""

# ---------------------------------------------------------------------------
# (требуется для загрузки, удаления: для всех) имя сервера IMAP4,
# имя пользователя
# ---------------------------------------------------------------------------

imap_servername = "imap.gmail.com"
imap_username = "burkovski.danil@gmail.com"
imap_password_file = None

# ---------------------------------------------------------------------------
# (требуется для загрузки, удаления: для всех) имя сервера POP3,
# имя пользователя
# ---------------------------------------------------------------------------

pop_servername = "pop.gmail.com"
pop_username = "burkovski.danil@gmail.com"
pop_password_file = None

# ---------------------------------------------------------------------------
# (требуется для отправки: для всех) имя сервера SMTP
# смотрите модуль Python smtpd, где приводится класс сервера SMTP,
# выполняемого локально;
# ---------------------------------------------------------------------------

smtp_servername = "smtp.gmail.com"
smtp_username = "burkovski.danil@gmail.com"
smtp_password_file = None

# ---------------------------------------------------------------------------
# (необязательные параметры: для всех) персональная информация,
# используемая клиентами для заполнения полей в сообщениях,
# если эти параметры определены;
# подпись - может быть блоком в тройных кавычках, игнорируется,
# если пустая строка;
# адрес - используется в качестве начального значения поля "From",
# если непустая строка, больше не пытается определить значение
# поля From для ответов: это имело переменный успех;
# ---------------------------------------------------------------------------

my_address = "burkovski.danil@gmail.com"
my_signature = "Thanks,\n\tBurkovski Danil."

# ---------------------------------------------------------------------------
# (обязательный параметр: mailtools) каталог, где некоторые клиенты
# сохраняют отправленные сообщения;
# ---------------------------------------------------------------------------

save_mail_dir = r"C:\Users\HP\Documents\Sent messages"
save_mail_encoding = "utf-8"


# ---------------------------------------------------------------------------
# (обязательный параметр: pymail, pymail2) локальный файл, где pymail
# сохраняет почту по запросу;
# ---------------------------------------------------------------------------

sent_mail_file = r".\sentmail.txt"

# ---------------------------------------------------------------------------
# (обязательные параметры: pymail, mailtools) fetch_encoding -
# это имя кодировки, используемой для декодирования байтов сообщения,
# а также для кодирования/декодирования текста сообщения, если они
# сохраняются в текстовых файлах;
# headers_encode_to - для отправки заголовков;
# ---------------------------------------------------------------------------

fetch_encoding = "utf-8"
headers_encode_to = None

# ---------------------------------------------------------------------------
# (необязательный параметр: mailtools)максимальное количество заголовков
# или сообщений, загружаемых за один запрос; если указать значение N,
# mailtools будет извлекать не более N самых последних электронных писем;
# более старые сообщения, не попавшие в это число, не будут извлекаться
# с сервера, но будут возвращаться как пустые письма;
# если этой переменной присвоить значение None (или 0), будут загружаться
# все сообщения; используйте этот параметр, если вам может поступать
# очень большое количество писем, а ваше подключение к Интернету
# или сервер слишком медленные, чтобы можно было выполнить загрузку
# сразу всех сообщений; кроме того, некоторые клиенты загружают
# только самые свежие письма, но этот параметр никак не связан
# с данной особенностью;
# ---------------------------------------------------------------------------

fetch_limit = 50
